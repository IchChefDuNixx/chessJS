generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  username          String            @id
  password          UserPassword      @relation(fields: [username], references: [username])  
  registered        DateTime          @default(now())
  profile_picture   String?
  GameAsPlayer1     Game[]            @relation(name: "player_1")
  GameAsPlayer2     Game[]            @relation(name: "player_2")
  GameAsWinner      Game[]            @relation(name: "winner")
  set_a             Boolean           @default(true)
  set_b             Boolean           @default(true)
  set_c             Boolean           @default(false)
  set_d             String            @default("")
}

model Game {
  id          Int       @id @default(autoincrement())
  timestamp   DateTime  @default(now())
  player_1    User      @relation(name: "player_1", fields: [player1], references: [username])
  player_2    User      @relation(name: "player_2", fields: [player2], references: [username])
  winner_ref  User      @relation(name: "winner", fields: [winner], references: [username])
  player1     String
  player2     String
  winner      String
}

// Theoretically could be in User, but when querying you'd have to exclude the password everytime.
model UserPassword {
  user      User?      
  username  String    @id
  password  String    // hashed password, not plaintext
}